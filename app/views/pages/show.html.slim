- content_for :title do
 - @page.title

= render @page
- if @page.page_type == 'post' && @related_posts.to_a.size > 0
  .related-post-box
    h3 Related Posts
    - @related_posts.each do |post|
      .related-post class="#{cycle('first', 'second', 'third', 'fourth')}"
        strong.link = link_to post.title, page_path(post.slug)
        p.info
          = post.created_at.to_formatted_s(:proper)
          | &nbsp; &middot; &nbsp;<i class="icon-comments"></i> #{post.comments_count || 0}
        p.start == strip_tags(markdown(post.body)).truncate(100, omission: '... (continued)')

- if @page.has_comments
  .comments#comments class="#{(@related_posts.to_a.size == 0) ? 'no-related' : nil}"
    h3.title <span class="count">#{@page.comments_count || 0}</span> #{'Comment'.pluralize(@page.comments_count)}
    .comment-added
      | Comment successfully added. <a href="#" class="bottom-btn">View comment</a>.
      | <a href="#" class="close-btn">Ã—</a>
    .comment-form
      = simple_form_for @comment, remote: true, html: { 'data-update' => '.comments' } do |f|
        = f.input :page_id, as: :hidden, input_html: { value: @page.id }
        = f.input :name, label: false, placeholder: 'name'
        = f.input :email, label: false, placeholder: 'email'
        = f.input :url, label: false, placeholder: 'http://'
        = f.input :comment, label: false, placeholder: 'leave a message...'
        = f.submit 'Post Comment', class: 'btn add-comment'
        .remember-me
          label
            = check_box_tag 'remember_me', 1, true
            span Remember Me?

    = render partial: 'comments/comment', collection: @page.comments.order('created_at ASC')